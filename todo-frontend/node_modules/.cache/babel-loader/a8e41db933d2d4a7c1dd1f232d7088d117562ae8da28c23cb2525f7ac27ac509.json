{"ast":null,"code":"var _jsxFileName = \"/Users/frankie/Desktop/TodoPortal/todo-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport AddTaskForm from \"./components/AddTaskForm.jsx\";\nimport UpdateForm from \"./components/UpdateForm.jsx\";\nimport ToDo from \"./components/ToDo.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const baseUrl = \"http://localhost:5006\";\n\n  // Tasks (ToDo List) State\n  const [toDo, setToDo] = useState([]);\n\n  // get all the todos from the database\n  const getAllToDo = setToDo => {\n    axios.get(baseUrl).then(data => {\n      setToDo(data.data);\n    });\n  };\n  useEffect(() => {\n    getAllToDo(setToDo);\n  }, []);\n  // Temp State\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [newTaskDescription, setNewTaskDescription] = useState(\"\");\n  const [dateTime, setDateTime] = useState(new Date());\n  const [updateData, setUpdateData] = useState(\"\");\n\n  // Add task\n  const addTask = () => {\n    if (newTaskTitle) {\n      axios.post(baseUrl + \"/add\", {\n        title: newTaskTitle,\n        description: newTaskDescription,\n        time: dateTime,\n        status: false\n      }).then(() => {\n        console.log(newTaskTitle);\n        getAllToDo(setToDo);\n        setDateTime();\n        setNewTaskTitle(\"\");\n        setNewTaskDescription(\"\");\n      });\n    }\n  };\n  // Change task for update\n  const changeTaskTitle = (e, d) => {\n    let newEntry = {\n      _id: updateData._id,\n      title: e.target.value,\n      description: updateData.description,\n      time: updateData.time,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n  const changeTaskDescription = e => {\n    let newEntry = {\n      _id: updateData._id,\n      title: updateData.title,\n      description: e.target.value,\n      time: updateData.time,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n\n  // Update task\n  ///////////////////////////\n  const updateTask = () => {\n    axios.post(baseUrl + \"/update\", {\n      _id: updateData._id,\n      title: updateData.title,\n      description: updateData.description,\n      time: updateData.time,\n      status: updateData.status\n    }).then(() => {\n      getAllToDo(setToDo);\n      setUpdateData(\"\");\n      setDateTime(\"\");\n      setNewTaskDescription(\"\");\n    });\n  };\n\n  // Delete task\n  const deleteTask = _id => {\n    axios.post(baseUrl + \"/delete\", {\n      _id\n    });\n    getAllToDo(setToDo);\n  };\n\n  // Mark task as done or completed\n\n  const markDone = (_id, status) => {\n    axios.post(baseUrl + \"/markDone\", {\n      _id: _id,\n      status: status\n    }).then(() => {\n      getAllToDo(setToDo);\n    });\n  };\n\n  // Cancel update\n  const cancelUpdate = () => {\n    setUpdateData(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List App by Frankie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeTaskTitle: changeTaskTitle,\n      changeTaskDescription: changeTaskDescription,\n      updateTask: updateTask,\n      cancelUpdate: cancelUpdate,\n      dateTime: dateTime,\n      setDateTime: setDateTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTaskTitle: newTaskTitle,\n      setNewTaskTitle: setNewTaskTitle,\n      newTaskDescription: newTaskDescription,\n      setNewTaskDescription: setNewTaskDescription,\n      dateTime: dateTime,\n      setDateTime: setDateTime,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), toDo && toDo.length ? \"\" : \"No Tasks...\", toDo && toDo.map((task, index) => /*#__PURE__*/_jsxDEV(ToDo, {\n      task: task,\n      index: index,\n      markDone: markDone,\n      setUpdateData: setUpdateData,\n      deleteTask: deleteTask\n    }, task._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SOhaYRAnzpcTrs21VHAONmMBq2M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","AddTaskForm","UpdateForm","ToDo","axios","jsxDEV","_jsxDEV","App","_s","baseUrl","toDo","setToDo","getAllToDo","get","then","data","newTaskTitle","setNewTaskTitle","newTaskDescription","setNewTaskDescription","dateTime","setDateTime","Date","updateData","setUpdateData","addTask","post","title","description","time","status","console","log","changeTaskTitle","e","d","newEntry","_id","target","value","changeTaskDescription","updateTask","deleteTask","markDone","cancelUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","index","_c","$RefreshReg$"],"sources":["/Users/frankie/Desktop/TodoPortal/todo-frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport AddTaskForm from \"./components/AddTaskForm.jsx\";\nimport UpdateForm from \"./components/UpdateForm.jsx\";\nimport ToDo from \"./components/ToDo.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport axios from \"axios\";\nfunction App() {\n  const baseUrl = \"http://localhost:5006\";\n\n  // Tasks (ToDo List) State\n  const [toDo, setToDo] = useState([]);\n\n  // get all the todos from the database\n  const getAllToDo = setToDo => {\n    axios.get(baseUrl).then(data => {\n      setToDo(data.data);\n    });\n  };\n\n  useEffect(() => {\n    getAllToDo(setToDo);\n  }, []);\n  // Temp State\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [newTaskDescription, setNewTaskDescription] = useState(\"\");\n  const [dateTime, setDateTime] = useState(new Date());\n  const [updateData, setUpdateData] = useState(\"\");\n\n  // Add task\n  const addTask = () => {\n    if (newTaskTitle) {\n      axios\n        .post(baseUrl + \"/add\", {\n          title: newTaskTitle,\n          description: newTaskDescription,\n          time: dateTime,\n          status: false,\n        })\n        .then(() => {\n          console.log(newTaskTitle);\n          getAllToDo(setToDo);\n          setDateTime();\n          setNewTaskTitle(\"\");\n          setNewTaskDescription(\"\");\n        });\n    }\n  };\n  // Change task for update\n  const changeTaskTitle = (e, d) => {\n    let newEntry = {\n      _id: updateData._id,\n      title: e.target.value,\n      description: updateData.description,\n      time: updateData.time,\n      status: updateData.status ? true : false,\n    };\n    setUpdateData(newEntry);\n  };\n\n  const changeTaskDescription = e => {\n    let newEntry = {\n      _id: updateData._id,\n      title: updateData.title,\n      description: e.target.value,\n      time: updateData.time,\n      status: updateData.status ? true : false,\n    };\n    setUpdateData(newEntry);\n  };\n\n  // Update task\n  ///////////////////////////\n  const updateTask = () => {\n    axios\n      .post(baseUrl + \"/update\", {\n        _id: updateData._id,\n        title: updateData.title,\n        description: updateData.description,\n        time: updateData.time,\n        status: updateData.status,\n      })\n      .then(() => {\n        getAllToDo(setToDo);\n        setUpdateData(\"\");\n        setDateTime(\"\");\n        setNewTaskDescription(\"\");\n      });\n  };\n\n  // Delete task\n  const deleteTask = _id => {\n    axios.post(baseUrl + \"/delete\", { _id });\n    getAllToDo(setToDo);\n  };\n\n  // Mark task as done or completed\n\n  const markDone = (_id, status) => {\n    axios\n      .post(baseUrl + \"/markDone\", {\n        _id: _id,\n        status: status,\n      })\n      .then(() => {\n        getAllToDo(setToDo);\n      });\n  };\n\n  // Cancel update\n  const cancelUpdate = () => {\n    setUpdateData(\"\");\n  };\n\n  return (\n    <div className=\"container App\">\n      <br />\n      <br />\n      <h1>To Do List App by Frankie</h1>\n      <br />\n      <br />\n\n      {updateData && updateData ? (\n        <UpdateForm\n          updateData={updateData}\n          changeTaskTitle={changeTaskTitle}\n          changeTaskDescription={changeTaskDescription}\n          updateTask={updateTask}\n          cancelUpdate={cancelUpdate}\n          dateTime={dateTime}\n          setDateTime={setDateTime}\n        />\n      ) : (\n        <AddTaskForm\n          newTaskTitle={newTaskTitle}\n          setNewTaskTitle={setNewTaskTitle}\n          newTaskDescription={newTaskDescription}\n          setNewTaskDescription={setNewTaskDescription}\n          dateTime={dateTime}\n          setDateTime={setDateTime}\n          addTask={addTask}\n        />\n      )}\n\n      {toDo && toDo.length ? \"\" : \"No Tasks...\"}\n      {toDo &&\n        toDo.map((task, index) => (\n          <ToDo\n            key={task._id}\n            task={task}\n            index={index}\n            markDone={markDone}\n            setUpdateData={setUpdateData}\n            deleteTask={deleteTask}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}